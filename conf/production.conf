# This is the main configuration file for the application.
# ~~~~~

include "modules.conf"
include "filters.conf"
include "nacos.conf"

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.http.secret.key = "QCY?tAnfk?aZ?iwrNwnxIlR6CTf:G3gf:90Lacd@5241AB`R5W:1uDFN];Ik@n"

# The application languages
# ~~~~~
application.langs = "en"


# Root logger:
logger.root = ERROR

# Logger used by the framework:
logger.play = INFO

# Logger provided to your application:
logger.application = DEBUG



ebean.default = "models.*"
# Number of database connections
# See https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing
fixedConnectionPool = 9

# Set Hikari to fixed size
play.db {
  prototype {
    hikaricp.minimumIdle = ${fixedConnectionPool}
    hikaricp.maximumPoolSize = ${fixedConnectionPool}
  }
}


# Job queue sized to HikariCP connection pool
database.dispatcher {
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor {
    fixed-pool-size = ${fixedConnectionPool}
  }
}

db.default.driver = com.mysql.cj.jdbc.Driver
db.default.url = "jdbc:mysql://localhost/test"
db.default.username = root
db.default.password = "330793279"


play {
  evolutions {
    enabled = false
  }
  http {
    filters = "common.filters.Filters"
    errorHandler = "common.handler.ErrorHandler"
  }
  filters {
    enabled = "play.filters.csrf.CSRFFilter"
    csrf {
      header {
        bypassHeaders {
          X-Requested-With = "*"
          Csrf-Token = "nocheck"
        }
      }
    }
  }
  akka {
    actor {
      retrieveBodyParserTimeout = 5 second
      default-dispatcher = {
        fork-join-executor {
          parallelism-min = 10
          parallelism-factor = 3.0
          parallelism-max = 100
          task-peeking-mode = "FIFO"
        }
      }
    }
  }
  server {
    http.address = localhost
    http.address = ${?TRANSPORT_HTTP_BIND_ADDRESS}
    https.address = localhost
    https.address = ${?TRANSPORT_HTTPS_BIND_ADDRESS}
    # Ports are hardcoded and the values match the values in the `deployment.yml` kubernetes
    # descriptor. We could use ENV_VAR overwrites to make this more flexible too.
    http.port = 9000
    https.port = 9443
  }
}


nacos4s.client {
  naming {
    serverAddr = "192.168.0.40:8501"
    namespace = ""
    autoRegisterInstance = on # true
    serviceName = "hummingbird"
    ip = "192.168.0.42"
    port = 9999
  }
  config {
    serverAddr = "127.0.0.1:8848"
    namespace = ""
  }
}



